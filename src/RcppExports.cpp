// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// hexbarrier01
Rcpp::List hexbarrier01(Rcpp::List args_h);
RcppExport SEXP _RMAPI_hexbarrier01(SEXP args_hSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type args_h(args_hSEXP);
    rcpp_result_gen = Rcpp::wrap(hexbarrier01(args_h));
    return rcpp_result_gen;
END_RCPP
}
// run_sims_cpp
Rcpp::List run_sims_cpp(Rcpp::List args, Rcpp::List args_functions, Rcpp::List args_progress);
RcppExport SEXP _RMAPI_run_sims_cpp(SEXP argsSEXP, SEXP args_functionsSEXP, SEXP args_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type args(argsSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type args_functions(args_functionsSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type args_progress(args_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(run_sims_cpp(args, args_functions, args_progress));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RMAPI_hexbarrier01", (DL_FUNC) &_RMAPI_hexbarrier01, 1},
    {"_RMAPI_run_sims_cpp", (DL_FUNC) &_RMAPI_run_sims_cpp, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_RMAPI(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
